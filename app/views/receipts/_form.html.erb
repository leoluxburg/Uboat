<%= simple_form_for(@receipt) do |f| %>
<%= f.error_notification %>
<%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>

<div class="form-inputs">
  <h5><i class="fas fa-user" style="color: #2078AD;"></i> Contacto</h5>
  <div class="row">
    <div class="col-md-6"><%= f.input :first_name %></div>
    <div class="col-md-6"><%= f.input :last_name %></div>
  </div>
  <div class="row">
    <div class="col-md-6"><%= f.input :email %></div>
    <div class="col-md-6"><%= f.input :phone %></div>
  </div>
  <h5><i class="fas fa-truck" style="color: #2078AD;"></i> Envio y Facturacion</h5>

  <div class="row">
   <div class="col-md-4"><%= f.input :shipping_country, as: :string%></div>
   <div class="col-md-4"><%= f.input :shipping_city, as: :string%></div>
   <div class="col-md-4"><%= f.input :shipping_postal_code, as: :string%></div>
 </div>
 <div class="row">
  <div class="col-md-12"><%= f.input :shipping_address_line_1 %></div>
</div>
<h5><i class="fas fa-align-justify" style="color: #2078AD;"></i>Nota</h5>
<%= f.input :order_notes %>

</div>
<hr>
<div class="basket-item">
  <div>
    <h4> Subtotal: <%= '%.2f' % current_order.subtotal %></h4>
    <h3> Total: <%= '%.2f' % current_order.subtotal %></h3>
  </div>
  <div>
    <div class="form-actions">
      <%= f.button :submit, class: 'btn btn-boat' %>
      <div id="container-form" ></div>
    </div>
  </div>
</div>
<% end %>
  <script>
        const getUrlParam = (key) => new URLSearchParams(window.location.search).get(key);

          pfWallet = pfWallet || {};
          let apiKey = "";
          let cclw = "";

          apiKey = "SlLmEttBcJBgyYjIq4CasgIEsOtrFaZm|DIRsmLbEXTpKcsUWnrmHh4Qtj";
          cclw = "DB05C1F758097171675A6DC698B68371F0336219CBC12FDB5929BFB243B120A4095584DE264D622DBD984501436CEB09AD76C3CBEFD02140D16A855BB3FE4B62"; //CÃ³digo Web
          pfWallet.useAsSandbox(false);

          pfWallet.openService({
              apiKey: apiKey,
              cclw: cclw
          }).then(function (merchantSetup) {
              startMerchantForm(merchantSetup);
          }, function (error) {
              console.log(error);
          });

          let sdk;
          function startMerchantForm(merchantSetup) {
              let paymentInfo = {
                  amount: '<%= current_order.subtotal %>',
                  discount: 0.0,
                  taxAmount: 0.0,
                  description: getUrlParam('descripcion')
              };
              console.log("merchantSetup", merchantSetup);
              let setup = {
                  lang: 'es',
                  embedded: (getUrlParam('boton') == "false"),
                  // type: 'lk',
                  // code: 'LK-MAIMLMD1FKSQKCHU',
                  container: 'container-form',
                  onError: function (data) {
                      console.error("errors", data);
                  },
                  onTxSuccess: function (data) {
                      console.log("onTxSuccess", data);
                      window.location.href = pfWallet.pfHostViews + `/pf/default-receipt/${data?.Oper}`;
                  },
                  onTxError: function (data) {
                      console.error("when the onTxError, in other process", data);
                  },
                  onClose: function () {
                      console.log("onClose called");
                  }
              };
              sdk = merchantSetup.init(
                  merchantSetup.dataMerchant,
                  paymentInfo,
                  setup
              );
          }

      </script>
